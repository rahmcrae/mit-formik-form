{"ast":null,"code":"import React from\"react\";// TODO: import useFormik from formik library\nimport{useFormik}from\"formik\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// TODO: add a const called formik assigned to useFormik()\nvar formik=useFormik({initialValues:{email:\"\",password:\"\"},onSubmit:function onSubmit(values){alert(\"login successful\");},validate:function validate(values){var errors={};if(!values.email){errors.email=\"field required\";}else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)){errors.email=\"Username should be an email\";}if(!values.password)errors.password=\"field required\";return errors;}});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:formik.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"emailField\",type:\"text\",name:\"email\",onChange:formik.handleChange,value:formik.values.email}),formik.errors.email?/*#__PURE__*/_jsx(\"div\",{id:\"emailError\",style:{color:\"red\"},children:formik.errors.email}):null,/*#__PURE__*/_jsx(\"div\",{children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{id:\"pswField\",type:\"text\",name:\"password\",onChange:formik.handleChange,value:formik.values.password}),/*#__PURE__*/_jsx(\"br\",{}),formik.errors.password?/*#__PURE__*/_jsx(\"div\",{id:\"pswError\",style:{color:\"red\"},children:formik.errors.password}):null,/*#__PURE__*/_jsx(\"button\",{id:\"submitBtn\",type:\"submit\",children:\"Submit\"})]})});}export default App;","map":{"version":3,"names":["React","useFormik","jsx","_jsx","jsxs","_jsxs","App","formik","initialValues","email","password","onSubmit","values","alert","validate","errors","test","children","handleSubmit","id","type","name","onChange","handleChange","value","style","color"],"sources":["/Users/rah/Desktop/rah_repo/MITxPRO/assignments/_modules/module_13/mit-formik-form/src/App.js"],"sourcesContent":["import React from \"react\";\n// TODO: import useFormik from formik library\nimport { useFormik } from \"formik\";\n\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: (values) => {\n      alert(\"login successful\");\n    },\n    validate: (values) => {\n      let errors = {};\n      if (!values.email) {\n        errors.email = \"field required\";\n      } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n      ) {\n        errors.email = \"Username should be an email\";\n      }\n      if (!values.password) errors.password = \"field required\";\n      return errors;\n    }\n  });\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <div>Email:</div>\n        <input\n          id=\"emailField\"\n          type=\"text\"\n          name=\"email\"\n          onChange={formik.handleChange}\n          value={formik.values.email}\n        />\n        {formik.errors.email ? (\n          <div id=\"emailError\" style={{color: \"red\"}}>\n            {formik.errors.email}\n          </div>\n        ) : null}\n\n        <div>Password:</div>\n        <input \n          id=\"pswField\"\n          type=\"text\"\n          name=\"password\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n        />\n        <br />\n        {formik.errors.password ? (\n          <div id=\"pswError\" style={{ color: \"red\"}}>\n            {formik.errors.password}\n          </div>\n        ) : null}\n        <button id=\"submitBtn\" type=\"submit\"> \n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB;AACA,OAASC,SAAS,KAAQ,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AACA,GAAM,CAAAC,MAAM,CAAGN,SAAS,CAAC,CACvBO,aAAa,CAAE,CACbC,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,EACZ,CAAC,CACDC,QAAQ,CAAE,SAAAA,SAACC,MAAM,CAAK,CACpBC,KAAK,CAAC,kBAAkB,CAAC,CAC3B,CAAC,CACDC,QAAQ,CAAE,SAAAA,SAACF,MAAM,CAAK,CACpB,GAAI,CAAAG,MAAM,CAAG,CAAC,CAAC,CACf,GAAI,CAACH,MAAM,CAACH,KAAK,CAAE,CACjBM,MAAM,CAACN,KAAK,CAAG,gBAAgB,CACjC,CAAC,IAAM,IACL,CAAC,0CAA0C,CAACO,IAAI,CAACJ,MAAM,CAACH,KAAK,CAAC,CAC9D,CACAM,MAAM,CAACN,KAAK,CAAG,6BAA6B,CAC9C,CACA,GAAI,CAACG,MAAM,CAACF,QAAQ,CAAEK,MAAM,CAACL,QAAQ,CAAG,gBAAgB,CACxD,MAAO,CAAAK,MAAM,CACf,CACF,CAAC,CAAC,CAEF,mBACEZ,IAAA,QAAAc,QAAA,cACEZ,KAAA,SAAMM,QAAQ,CAAEJ,MAAM,CAACW,YAAa,CAAAD,QAAA,eAClCd,IAAA,QAAAc,QAAA,CAAK,QAAM,CAAK,CAAC,cACjBd,IAAA,UACEgB,EAAE,CAAC,YAAY,CACfC,IAAI,CAAC,MAAM,CACXC,IAAI,CAAC,OAAO,CACZC,QAAQ,CAAEf,MAAM,CAACgB,YAAa,CAC9BC,KAAK,CAAEjB,MAAM,CAACK,MAAM,CAACH,KAAM,CAC5B,CAAC,CACDF,MAAM,CAACQ,MAAM,CAACN,KAAK,cAClBN,IAAA,QAAKgB,EAAE,CAAC,YAAY,CAACM,KAAK,CAAE,CAACC,KAAK,CAAE,KAAK,CAAE,CAAAT,QAAA,CACxCV,MAAM,CAACQ,MAAM,CAACN,KAAK,CACjB,CAAC,CACJ,IAAI,cAERN,IAAA,QAAAc,QAAA,CAAK,WAAS,CAAK,CAAC,cACpBd,IAAA,UACEgB,EAAE,CAAC,UAAU,CACbC,IAAI,CAAC,MAAM,CACXC,IAAI,CAAC,UAAU,CACfC,QAAQ,CAAEf,MAAM,CAACgB,YAAa,CAC9BC,KAAK,CAAEjB,MAAM,CAACK,MAAM,CAACF,QAAS,CAC/B,CAAC,cACFP,IAAA,QAAK,CAAC,CACLI,MAAM,CAACQ,MAAM,CAACL,QAAQ,cACrBP,IAAA,QAAKgB,EAAE,CAAC,UAAU,CAACM,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAK,CAAE,CAAAT,QAAA,CACvCV,MAAM,CAACQ,MAAM,CAACL,QAAQ,CACpB,CAAC,CACJ,IAAI,cACRP,IAAA,WAAQgB,EAAE,CAAC,WAAW,CAACC,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,QAErC,CAAQ,CAAC,EACL,CAAC,CACJ,CAAC,CAEV,CAEA,cAAe,CAAAX,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}